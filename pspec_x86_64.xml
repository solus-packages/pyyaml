<PISI>
    <Source>
        <Name>pyyaml</Name>
        <Packager>
            <Name>Ikey Doherty</Name>
            <Email>ikey@solus-project.com</Email>
        </Packager>
        <License>MIT</License>
        <Summary xml:lang="en">Pyython YAML binding</Summary>
        <Description xml:lang="en">YAML is a data serialization format designed for human readability and interaction with scripting languages.

PyYAML is a YAML parser and emitter for the Python programming language.

PyYAML features

a complete  YAML 1.1 parser. In particular, PyYAML can parse all examples from the specification. The parsing algorithm is simple enough to be a reference for YAML parser implementors.
Unicode support including UTF-8/UTF-16 input/output and \u escape sequences.
low-level event-based parser and emitter API (like SAX).
high-level API for serializing and deserializing native Python objects (like DOM or pickle).
support for all types from the  YAML types repository. A simple extension API is provided.
both pure-Python and fast LibYAML-based parsers and emitters.
relatively sensible error messages.
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://solus-project.com/sources/README.Solus</Archive>
    </Source>
    <Package>
        <Name>pyyaml</Name>
        <Summary xml:lang="en">Pyython YAML binding</Summary>
        <Description xml:lang="en">YAML is a data serialization format designed for human readability and interaction with scripting languages.

PyYAML is a YAML parser and emitter for the Python programming language.

PyYAML features

a complete  YAML 1.1 parser. In particular, PyYAML can parse all examples from the specification. The parsing algorithm is simple enough to be a reference for YAML parser implementors.
Unicode support including UTF-8/UTF-16 input/output and \u escape sequences.
low-level event-based parser and emitter API (like SAX).
high-level API for serializing and deserializing native Python objects (like DOM or pickle).
support for all types from the  YAML types repository. A simple extension API is provided.
both pure-Python and fast LibYAML-based parsers and emitters.
relatively sensible error messages.
</Description>
        <PartOf>programming.python</PartOf>
        <Files>
            <Path fileType="library">/usr/lib/python2.7</Path>
        </Files>
    </Package>
    <History>
        <Update release="2">
            <Date>2016-04-04</Date>
            <Version>3.11</Version>
            <Comment>Packaging update</Comment>
            <Name>Ikey Doherty</Name>
            <Email>ikey@solus-project.com</Email>
        </Update>
    </History>
</PISI>